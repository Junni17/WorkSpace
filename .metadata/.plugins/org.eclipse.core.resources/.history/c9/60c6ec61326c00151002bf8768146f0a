package exercise3;

import java.util.Arrays;
import java.util.HashSet;

public class Sequence {

	private int[] values;

	public Sequence(int size) {
		this.values = new int[size];
	}

	public int[] getValues() {
		return this.values;
	}

	public void set(int i, int n) {
		this.values[i] = n;
	}

	public boolean equals(Sequence other) {
		boolean equals = true;
		if (other.values.length == this.values.length) {
			for (int i = 0; i < other.values.length; i++) {
				if (other.values[i] != this.values[i]) {
					equals = false;
				}
			}
		} else {
			equals = false;
		}

		return equals;
	}

	public int[] smallest(Sequence a) {
		int[] temp;
		if (a.values.length < this.values.length) {
			temp = a.values;
		} else if (a.values.length > this.values.length) {
			temp = this.values;
		} else {
			temp = this.values;
		}
		return temp;
	}

	public int[] biggest(Sequence a) {
		int[] temp;
		if (a.values.length > this.values.length) {
			temp = a.values;
		} else if (a.values.length < this.values.length) {
			temp = this.values;
		} else {
			temp = this.values;
		}
		return temp;
	}

	public boolean sameValues(Sequence a) {
		int[] biggest = biggest(a);
		int[] smallest = smallest(a);

		Integer[] temp = new Integer[biggest.length];
		for (int i = 0; i < biggest.length; i++) {
			temp[i] = biggest[i];
		}

		Integer[] temp1 = new Integer[smallest.length];
		for (int i = 0; i < smallest.length; i++) {
			temp1[i] = smallest[i];
		}

		System.out.println(Arrays.toString(temp));
		System.out.println(Arrays.toString(temp1));

		HashSet<Integer> set1 = new HashSet<Integer>(Arrays.asList(temp));
		HashSet<Integer> set2 = new HashSet<Integer>(Arrays.asList(temp1));
		return set1.equals(set2);

	}

	public void print() {
		System.out.println(Arrays.toString(this.values));
	}
}
