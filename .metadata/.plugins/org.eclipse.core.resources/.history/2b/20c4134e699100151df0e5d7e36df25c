package gui;

import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.layout.GridPane;
import javafx.stage.Modality;
import javafx.stage.Stage;
import model.Conference;
import model.Excursion;
import model.Hotel;
import model.Participant;

public class TestClass extends Stage {

	public TestClass(Stage owner) {
		this.initOwner(owner);
		this.initModality(Modality.APPLICATION_MODAL);
		this.setResizable(false);

		this.setTitle("TEST");
		GridPane pane = new GridPane();
		this.initContent(pane);

		Scene scene = new Scene(pane);
		this.setScene(scene);
	}

	public void setConference(Conference conference) {
		this.controller.conference = conference;
		this.controller.updateControlls();
	}

	private ListView<Excursion> excursions;
	private ListView<Hotel> hotels;
	private ListView<Participant> participants;

	private void initContent(GridPane pane) {

		pane.setGridLinesVisible(!true);
		pane.setHgap(20);
		pane.setVgap(10);
		pane.setPadding(new Insets(20));

		Label lblExcursions = new Label("Excursions:");
		Label lblHotels = new Label("Hotels");
		Label lblParticipants = new Label("Participants");

		pane.add(lblExcursions, 0, 0);
		pane.add(lblHotels, 1, 0);
		pane.add(lblParticipants, 2, 0);

		this.excursions = new ListView<Excursion>();
		this.excursions.setPrefSize(200, 200);
		this.excursions.setPrefHeight(200);
		pane.add(this.excursions, 0, 1);

		this.hotels = new ListView<>();
		this.hotels.setPrefSize(200, 200);
		this.hotels.setPrefHeight(200);
		pane.add(this.hotels, 1, 1);

		this.participants = new ListView<>();
		this.participants.setPrefSize(200, 200);
		pane.add(this.participants, 2, 1);

		Button btnClose = new Button("Close");
		pane.add(btnClose, 0, 2);

	}

	private Controller controller = new Controller();

	private class Controller {

		private Conference conference;

		private void updateControlls() {
			StatisticsPane.this.excursions.getItems().setAll(this.conference.getExcursions());
		}
	}

}
